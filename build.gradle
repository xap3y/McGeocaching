plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
    id 'io.freefair.lombok' version '8.7.1'
    id 'java'
    id "net.kyori.blossom" version "1.3.1"
}

group = 'eu.xap3y'
version = '1.0'
def baseCoordinates = "EggHunt"

blossom {
    replaceToken("@VERSION@", version)
}

repositories {
    mavenCentral()
    //mavenLocal()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }

    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        url = "https://jitpack.io"
    }

    maven {
        url = 'https://repo.extendedclip.com/content/repositories/placeholderapi/'
    }
}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.4-R0.1-SNAPSHOT"
    implementation 'org.incendo:cloud-annotations:2.0.0'
    implementation 'org.incendo:cloud-paper:2.0.0-beta.10'
    implementation 'eu.xap3y:xagui:1.2-beta.4'
    implementation 'com.github.fierioziy.particlenativeapi:ParticleNativeAPI-core:4.4.0'
    //compileOnly 'me.clip:placeholderapi:2.11.6'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

build {
    dependsOn(shadowJar)
    //finalizedBy("copyToServer")
}

tasks.jar {
    enabled = false
}

tasks {
    shadowJar {
        archiveClassifier.set('')
        archiveBaseName.set(baseCoordinates)
        //relocate 'eu.xap3y.xagui', "${group}.${baseCoordinates.toLowerCase()}.util.xagui"
    }
}